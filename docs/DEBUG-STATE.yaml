# MCP-DEBUG-STATE-V1
# Machine-optimized debugging state for Claude
# Update after each session with findings

meta:
  goal: "claude.ai->rtm_tasks"
  endpoint: "rtm-mcp-server.vcto-6e7.workers.dev"
  deployment: "swift-tiger"
  last_update: "2025-07-13T22:30:00Z"

state:
  build: "PASS"
  inspector_connect: "PASS"
  tool_execution: "PASS"
  auth_flow: "PASS"
  claude_integration: "UNTESTED"

proven:
- "rtm_auth!=oauth2_standard"
- "rtm_auth==desktop_flow"
- "tool_return=={content:[{type:'text',text:...}]}"
- "transport==streamable_http"
- "mcp_handler==RtmMCP.serve('/mcp',{...})"
- "corsOptions.origin==string"
- "hono_app==Hono<{Bindings:Env;Variables:Variables}>()"
- "oauth_flow==/authorize->frob->token->code->redirect"
- "deployment_name==Math.floor((Date.now()/1000)%adjectives.length)"

failed:
- "serveStreamableHttp->2339"
- "origin:string[]->2322"
- "c.get('debugLogger')->2769"
- "getUserInfo->2339"

hypotheses:
  h1:
    desc: "claude_add->oauth_complete->tools_work"
    test: "claude_desktop_config"
    priority: 1

blockers: []

next_action: "claude_desktop:add_mcp_server"

code_refs:
  serve: "src/index.ts:L84"
  cors: "src/index.ts:L86"
  types: "src/rtm-handler.ts:L10-L14"
  mock_user: "src/rtm-handler.ts:L340-L350"

errors_fixed:
  e1: "tool_response->wrap:{content:[...]}"
  e2: "serveStreamableHttp->serve"
  e3: "origin:[]->origin:string"
  e4: "unknown_logger->type:Variables"
  e5: "getUserInfo->mock_data"

oauth_test:
  url: "/authorize?response_type=code&client_id=test&redirect_uri=https://example.com/callback&state=test123"
  frob: "20bb29e2a290a306b28b977f08710e6076db3a6a"
  token: "9ab201dd..."
  code: "a386cb27-d99d-4537-a41f-73264b4cf0a9"
  redirect: "https://example.com/callback?code=...&state=test123"

sessions:
- ts: "2025-07-13T22:30:00Z"
  fixes: [ "hono_types", "oauth_test" ]
  time: 30
- ts: "2025-07-13T22:00:00Z"
  fixes: [ "serve", "cors" ]
  time: 10
- ts: "2025-07-13T18:00:00Z"
  fixes: [ "tool_return", "types" ]
  time: 240

metrics:
  orientation: [ 0, 120, 30 ]
  redundant: [ 3, 0, 0 ]
  hypothesis_success: [ 1, 1 ]
  forward: true
