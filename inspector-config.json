{
  "mcpServers": {
    "cowflare-rtm": {
      "command": "node",
      "args": ["-e", "
        const fetch = require('node-fetch');
        const WebSocket = require('ws');
        
        // HTTP transport for remote MCP server
        class HttpTransport {
          constructor(url) {
            this.url = url;
          }
          
          async request(message) {
            const response = await fetch(this.url, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'User-Agent': 'MCP-Inspector/1.0'
              },
              body: JSON.stringify(message)
            });
            
            if (!response.ok) {
              throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            return await response.json();
          }
        }
        
        const transport = new HttpTransport('https://rtm-mcp-server.vcto-6e7.workers.dev');
        
        // Simple stdio bridge
        process.stdin.on('data', async (data) => {
          try {
            const message = JSON.parse(data.toString());
            const response = await transport.request(message);
            process.stdout.write(JSON.stringify(response) + '\\n');
          } catch (error) {
            process.stderr.write(`Error: ${error.message}\\n`);
            process.stdout.write(JSON.stringify({
              jsonrpc: '2.0',
              id: null,
              error: {
                code: -32000,
                message: error.message
              }
            }) + '\\n');
          }
        });
        
        process.stderr.write('MCP HTTP Bridge Ready\\n');
      "]
    }
  }
}